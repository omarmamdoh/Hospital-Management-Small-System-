const sqlite = require("sqlite3");
const db = new sqlite.Database("hospital.db");
const createAccountsTable = `
CREATE TABLE IF NOT EXISTS ACCOUNTS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME TEXT NOT NULL,
    EMAIL TEXT UNIQUE NOT NULL,
    PASSWORD TEXT NOT NULL,
    ROLE TEXT CHECK(ROLE IN ('admin','doctor','user')) NOT NULL
)`;

const createDoctorProfilesTable = `
CREATE TABLE IF NOT EXISTS DOCTOR_PROFILES (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    ACCOUNT_ID INTEGER UNIQUE NOT NULL,
    SPECIALTY TEXT NOT NULL,
    YEARS_OF_EXPERIENCE INTEGER NOT NULL,
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ID)
)`;

const createSchedulesTable = `
CREATE TABLE IF NOT EXISTS SCHEDULES (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    DOCTOR_ACCOUNT_ID INTEGER NOT NULL,
    APPOINTMENT_DATE TEXT NOT NULL,
    START_TIME TEXT NOT NULL,
    END_TIME TEXT NOT NULL,
    FOREIGN KEY (DOCTOR_ACCOUNT_ID) REFERENCES ACCOUNTS(ID),
    UNIQUE (DOCTOR_ACCOUNT_ID, APPOINTMENT_DATE, START_TIME, END_TIME)
)`;

const createBookingsTable = `
CREATE TABLE IF NOT EXISTS BOOKINGS (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    USER_ACCOUNT_ID INTEGER NOT NULL,
    SCHEDULE_ID INTEGER NOT NULL UNIQUE,
    STATUS TEXT CHECK(STATUS IN ('Pending','Confirmed','Cancelled','Completed')) DEFAULT 'Pending',
    FOREIGN KEY (USER_ACCOUNT_ID) REFERENCES ACCOUNTS(ID),
    FOREIGN KEY (SCHEDULE_ID) REFERENCES SCHEDULES(ID)
)`;

module.exports = {
  db,
  createAccountsTable,
  createDoctorProfilesTable,
  createSchedulesTable,
  createBookingsTable,
};
